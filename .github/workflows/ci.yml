name: SynApps CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd apps/orchestrator
        pip install -e .
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        cd apps/orchestrator
        pytest --cov=. --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./apps/orchestrator/coverage.xml
        flags: backend
        fail_ci_if_error: false

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: apps/web-frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd apps/web-frontend
        npm ci
    
    - name: Run tests
      run: |
        cd apps/web-frontend
        npm test -- --coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./apps/web-frontend/coverage/coverage-final.json
        flags: frontend
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Python linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Lint Python code
      run: |
        flake8 apps/orchestrator
        black --check apps/orchestrator
        isort --check apps/orchestrator
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: apps/web-frontend/package-lock.json
    
    - name: Install Node.js linting dependencies
      run: |
        cd apps/web-frontend
        npm ci
    
    - name: Lint TypeScript code
      run: |
        cd apps/web-frontend
        npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, lint]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: apps/web-frontend/package-lock.json
    
    - name: Build frontend
      run: |
        cd apps/web-frontend
        npm ci
        npm run build
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker images
      run: |
        docker-compose -f infra/docker/docker-compose.yml build
