apiVersion: apps/v1
kind: Deployment
metadata:
  name: synapps-orchestrator
  labels:
    app: synapps-orchestrator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synapps-orchestrator
  template:
    metadata:
      labels:
        app: synapps-orchestrator
    spec:
      containers:
      - name: orchestrator
        image: ghcr.io/synapps/synapps-orchestrator:latest
        ports:
        - containerPort: 8000
        env:
        - name: PORT
          value: "8000"
        - name: HOST
          value: "0.0.0.0"
        - name: FRONTEND_URL
          value: "https://synapps-app.vercel.app"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: synapps-secrets
              key: openai-api-key
        - name: STABILITY_API_KEY
          valueFrom:
            secretKeyRef:
              name: synapps-secrets
              key: stability-api-key
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "0.5"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: synapps-orchestrator
spec:
  selector:
    app: synapps-orchestrator
  ports:
  - port: 80
    targetPort: 8000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: synapps-orchestrator
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.synapps.ai
    secretName: synapps-tls
  rules:
  - host: api.synapps.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: synapps-orchestrator
            port:
              number: 80
